From 6a82921dde0a53ad9b0a7f6383d7bb3bfb114d1c Mon Sep 17 00:00:00 2001
From: GloriousEggroll <gloriouseggroll@gmail.com>
Date: Wed, 7 Feb 2024 20:49:06 -0700
Subject: [PATCH] Don't let supergfxd mess with nvidia modprobe settings

---
 src/config.rs     | 11 ++---------
 src/controller.rs |  6 ------
 src/lib.rs        | 36 ------------------------------------
 3 files changed, 2 insertions(+), 51 deletions(-)

diff --git a/src/config.rs b/src/config.rs
index 999415b..b4a7bed 100644
--- a/src/config.rs
+++ b/src/config.rs
@@ -9,7 +9,7 @@ use crate::config_old::{GfxConfig300, GfxConfig405, GfxConfig500};
 use crate::error::GfxError;
 use crate::pci_device::{DiscreetGpu, GfxMode, HotplugType};
 use crate::{
-    MODPROBE_INTEGRATED, MODPROBE_NVIDIA_BASE, MODPROBE_NVIDIA_DRM_MODESET_ON, MODPROBE_PATH,
+    MODPROBE_INTEGRATED, MODPROBE_PATH,
     MODPROBE_VFIO,
 };
 
@@ -176,18 +176,11 @@ pub(crate) fn create_modprobe_conf(mode: GfxMode, device: &DiscreetGpu) -> Resul
 
     let content = match mode {
         GfxMode::Hybrid | GfxMode::AsusEgpu | GfxMode::NvidiaNoModeset => {
-            if device.is_nvidia() {
-                let mut base = MODPROBE_NVIDIA_BASE.to_vec();
-                base.append(&mut MODPROBE_NVIDIA_DRM_MODESET_ON.to_vec());
-                base
-            } else {
-                return Ok(());
-            }
+            return Ok(());
         }
         GfxMode::Vfio => create_vfio_conf(device),
         GfxMode::Integrated => {
             let mut base = MODPROBE_INTEGRATED.to_vec();
-            base.append(&mut MODPROBE_NVIDIA_DRM_MODESET_ON.to_vec());
             base
         }
         GfxMode::None | GfxMode::AsusMuxDgpu => vec![],
diff --git a/src/controller.rs b/src/controller.rs
index 0bf3fa1..4c3773d 100644
--- a/src/controller.rs
+++ b/src/controller.rs
@@ -117,12 +117,6 @@ impl CtrlGraphics {
             list.push(GfxMode::AsusMuxDgpu);
         }
 
-        if let Ok(Some(res)) = get_kernel_cmdline_nvidia_modeset() {
-            if !res {
-                list.push(GfxMode::NvidiaNoModeset);
-            }
-        }
-
         list
     }
 
diff --git a/src/lib.rs b/src/lib.rs
index 500d2b7..f928e9b 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -67,20 +67,6 @@ const DISPLAY_MANAGER: &str = "display-manager.service";
 
 const MODPROBE_PATH: &str = "/etc/modprobe.d/supergfxd.conf";
 
-static MODPROBE_NVIDIA_BASE: &[u8] = br#"# Automatically generated by supergfxd
-blacklist nouveau
-alias nouveau off
-options nvidia NVreg_DynamicPowerManagement=0x02
-"#;
-
-static MODPROBE_NVIDIA_DRM_MODESET_ON: &[u8] = br#"
-options nvidia-drm modeset=1
-"#;
-
-// static MODPROBE_NVIDIA_DRM_MODESET_OFF: &[u8] = br#"
-// options nvidia-drm modeset=0
-// "#;
-
 static MODPROBE_INTEGRATED: &[u8] = br#"# Automatically generated by supergfxd
 blacklist nouveau
 alias nouveau off
@@ -270,28 +256,6 @@ pub fn get_kernel_cmdline_mode() -> Result<Option<GfxMode>, GfxError> {
     Ok(None)
 }
 
-pub fn get_kernel_cmdline_nvidia_modeset() -> Result<Option<bool>, GfxError> {
-    let path = Path::new(KERNEL_CMDLINE);
-    let mut file = OpenOptions::new()
-        .read(true)
-        .open(path)
-        .map_err(|err| GfxError::Path(KERNEL_CMDLINE.to_string(), err))?;
-    let mut buf = String::new();
-    file.read_to_string(&mut buf)?;
-
-    // No need to be fast here, just check and go
-    for cmd in buf.split(' ') {
-        if cmd.contains("nvidia-drm.modeset=") {
-            let mode = cmd.trim_start_matches("nvidia-drm.modeset=");
-            let mode = mode == "1";
-            return Ok(Some(mode));
-        }
-    }
-
-    info!("nvidia-drm.modeset not set, ignoring");
-    Ok(None)
-}
-
 pub fn find_slot_power(address: &str) -> Result<PathBuf, GfxError> {
     let mut buf = Vec::new();
     let path = PathBuf::from_str(SLOTS).unwrap();
-- 
2.43.0

